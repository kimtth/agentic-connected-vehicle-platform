# ----- Backend Environment variables -----
# Azure OpenAI (preferred)
AZURE_OPENAI_API_KEY=your_azure_openai_api_key
AZURE_OPENAI_ENDPOINT=https://your-azure-openai-resource.openai.azure.com/
AZURE_OPENAI_DEPLOYMENT_NAME=your-deployment-name
AZURE_OPENAI_API_VERSION=2025-01-01-preview

# Azure Speech (for avatar/TTS)
AZURE_SPEECH_KEY=your_azure_speech_key
AZURE_SPEECH_REGION=your_azure_speech_region

# OpenAI (optional fallback)
OPENAI_API_KEY=
OPENAI_CHAT_MODEL_NAME=

# Cosmos DB Configuration
# For Docker Compose with emulator, use HTTPS (certificate auto-installed on startup):
COSMOS_DB_ENDPOINT=https://cosmosdb:8081
# Emulator uses predefined key value for authentication
COSMOS_DB_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==

# Cosmos DB Database and Container Names (optional to override defaults)
COSMOS_DB_DATABASE=VehiclePlatformDB
COSMOS_DB_CONTAINER_VEHICLES=vehicles
COSMOS_DB_CONTAINER_SERVICES=services
COSMOS_DB_CONTAINER_COMMANDS=commands
COSMOS_DB_CONTAINER_NOTIFICATIONS=notifications
COSMOS_DB_CONTAINER_STATUS=vehiclestatus
# Docker emulator can use key auth only
COSMOS_DB_USE_AAD=false

# Azure AD Authentication (API & User Sign-In)
AZURE_TENANT_ID=your-tenant-id
# Audience MUST be the Application ID URI (Expose an API) NOT the raw GUID when using custom scopes
AZURE_CLIENT_ID=your-application-client-id-or-alias
AZURE_AUTH_REQUIRED=true

# Frontend will request scope: api://your-application-client-id-or-alias/access_as_user
MCP_SERVER_HOST=127.0.0.1
ENABLE_MCP=true

# ----- Frontend Environment variables -----
REACT_APP_AZURE_CLIENT_ID=00000000-0000-0000-0000-000000000000
REACT_APP_AZURE_TENANT_ID=your-tenant-id
REACT_APP_AZURE_SCOPE= # (optional) api://<your-application-id>/access_as_user

# ----- For Development ----- 
API_TEST_MODE=true
REACT_APP_API_DEV_BASE_URL=
